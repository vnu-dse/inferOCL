package fr.irisa.triskell.alloy;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import edu.mit.csail.sdg.alloy4viz.AlloyAtom;
import edu.mit.csail.sdg.alloy4viz.AlloyInstance;
import edu.mit.csail.sdg.alloy4viz.AlloyModel;
import edu.mit.csail.sdg.alloy4viz.AlloyRelation;
import edu.mit.csail.sdg.alloy4viz.AlloySet;
import edu.mit.csail.sdg.alloy4viz.AlloyTuple;
import edu.mit.csail.sdg.alloy4viz.AlloyType;
import edu.mit.csail.sdg.alloy4viz.StaticInstanceReader;
import edu.mit.csail.sdg.alloy4viz.StaticProjector;

import edu.mit.csail.sdg.alloy4.Err;
import edu.mit.csail.sdg.alloy4.SafeList;
import edu.mit.csail.sdg.alloy4.XMLNode;
import edu.mit.csail.sdg.alloy4compiler.ast.ExprVar;
import edu.mit.csail.sdg.alloy4compiler.ast.Sig;
import edu.mit.csail.sdg.alloy4compiler.translator.A4Solution;
import edu.mit.csail.sdg.alloy4compiler.translator.A4SolutionReader;
import edu.mit.csail.sdg.alloy4compiler.translator.A4TupleSet;

public class AlloyLoaderTest {
	public static void main(String args[]){
		File xmlFile=new File("/Users/freddy/Documents/workspaces/alloy/alloy2emf/samplefiles/one.xml");
		XMLNode xml;
		AlloyInstance result;
		try {
			EPackage obj=(EPackage) EMFHelper.loadModel("/Users/freddy/Documents/workspaces/alloy/alloy2emf/samplefiles/simpleUML_MM.ecore");
			for(EClassifier clasi:obj.getEClassifiers()){
				System.out.println("eclass: "+clasi.toString());
			}
			EMFConverter converter=new EMFConverter(obj,"ClassModel");


			result = StaticInstanceReader.parseInstance(xmlFile);

			AlloyToEMF alloy2emf=new AlloyToEMF(converter,result);

			alloy2emf.convert();

			EMFHelper.save(converter.getMainOnstance(), "/Users/freddy/Documents/workspaces/alloy/alloy2emf/samplefiles/one.xmi");
			System.out.println("finish");
		} catch (Err e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
