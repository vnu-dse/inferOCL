package fr.irisa.triskell.alloy;

import java.io.File;
import java.io.IOException;
import java.util.LinkedList;

import org.eclipse.emf.ecore.EClassifier;
import org.eclipse.emf.ecore.EPackage;

import edu.mit.csail.sdg.alloy4.Err;
import edu.mit.csail.sdg.alloy4.XMLNode;
import edu.mit.csail.sdg.alloy4viz.AlloyInstance;
import edu.mit.csail.sdg.alloy4viz.StaticInstanceReader;

public class AlloyTestConverter {
	public static void main(String[] args) {
		LinkedList<String> files=new LinkedList<String>();
		for(int i=0;i<32;i++){
			files.add("/Users/freddy/Documents/workspaces/void/alsfiles/one_a.alsinstance"+i+".xml");
		}
		String strdest="/Users/freddy/Documents/workspaces/kompose_stable/kompose/fr.irisa.triskell.decompose.test/tests/rcd/instances";
		int j=0;
		for(String file:files){
			File xmlFile=new File(file);
			XMLNode xml;
			AlloyInstance result;
			try {
				EPackage obj=(EPackage) EMFHelper.loadModel("/Users/freddy/Documents/workspaces/alloy/alloy2emf/samplefiles/rcd_mm.ecore");
				for(EClassifier clasi:obj.getEClassifiers()){
					System.out.println("eclass: "+clasi.toString());
				}
				EMFConverter converter=new EMFConverter(obj,"ClassModel");


				result = StaticInstanceReader.parseInstance(xmlFile);

				AlloyToEMF alloy2emf=new AlloyToEMF(converter,result);

				alloy2emf.convert();

				EMFHelper.save(converter.getMainOnstance(), strdest+"/instance"+j+".xmi");
				System.out.println("finish");
				j++;
			} catch (Err e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
	}
}
